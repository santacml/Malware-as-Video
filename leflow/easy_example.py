import tensorflow as tf
import numpy as np
import sys
sys.path.append('../LeFlow/src')

import processMif as mif

# This creates a random 32-bit floating point input for your variables
def rand(dim):
    #return np.random.random(dim).astype(np.float32)
    return np.ones(dim).astype(np.float32)

nodes = 1

X = tf.placeholder(tf.float32, [1, 3])
test=rand([1,3])

dense1_w = tf.Variable(rand([3, nodes])) 
dense1_b = tf.Variable(rand([nodes]))

with tf.Session() as sess:

    # Generating circuit
    with tf.device("device:XLA_CPU:0"):
	
	
        dense1 = tf.add(tf.matmul(X, dense1_w)[0], dense1_b)

        #y = tf.cast(dense1[0], tf.int32)
	y = dense1[0]
	# y = tf.cast(dense1, tf.int32)	
	#y = dense1
    sess.run(tf.global_variables_initializer())
    result = sess.run(y,{X: test})

    # Print expected result
    print("Result Calculated: "+ str(result))

    # Creating .mif files to initialize the memories
    # To do this, go to <your_file>_ir_7.ll and check the list of params (inputs) and their sizes
    param5 = dense1_w.eval();
    param6 = dense1_b.eval();
    mif.createMem([param5,test,param6])
    #mif.createMem([test,param5,param6])
